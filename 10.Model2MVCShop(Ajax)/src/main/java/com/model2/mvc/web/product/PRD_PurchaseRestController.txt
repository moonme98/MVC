=================================================
PRD : Product Requirement Document : 제품요구서 작성 : ???
--------------------------------------------------
-- 용어에 익숙해지자 
: 구현요구사항을 AI 에 전달 하는 skill 을 익힘.
: 요구사항을 정확히 지시 : Prompt Detail
: 직접 지시가 아니라 AI 와 협업 
   예> 이렇게 하려면 어떻게 해야해 ? 
         : 난 알고 있지만. AI 가 생각하고 해결 할 수 있도록

: Low-code / Prompt Engineering / Ai-assisted coding
=================================================


##### Prompt > ProductRestController.java 구현


0. ProductService.java

package com.model2.mvc.service.product;

import java.util.Map;

import com.model2.mvc.common.Search;
import com.model2.mvc.service.domain.Product;


//==> 상품관리에서 서비스할 내용 추상화/캡슐화한 Service Interface Definition  
public interface ProductService {
	
	// 상품등록
	public void addProduct(Product product) throws Exception;
	
	// 상품조회
	public Product getProduct(int prodNo) throws Exception;
	
	// 상품리스트
	public Map<String, Object> getProductList(Search search) throws Exception;
	
	// 상품수정
	public void updateProduct(Product product) throws Exception;
	
	// 상품 총 개수 (옵션)
	public int getTotalCount(Search search) throws Exception;
}

1. Product.java 

package com.model2.mvc.service.domain;

import java.sql.Date;


public class Product {
	
	private String fileName;
	private String manuDate;
	private int price;
	private String prodDetail;
	private String prodName;
	private int prodNo;
	private Date regDate;
	private String proTranCode;
	
	private int tranNo; 
	
	public Product(){
	}
	
	public int getTranNo() {
        return tranNo;
    }
    public void setTranNo(int tranNo) {
        this.tranNo = tranNo;
    }
	public String getProTranCode() {
		return (proTranCode != null) ? proTranCode.trim() : "0";
	}
	public void setProTranCode(String proTranCode) {
		this.proTranCode = proTranCode;
	}
	public String getFileName() {
		return fileName;
	}
	public void setFileName(String fileName) {
		this.fileName = fileName;
	}
	public String getManuDate() {
		return manuDate;
	}
	public void setManuDate(String manuDate) {
		this.manuDate = manuDate;
	}
	public int getPrice() {
		return price;
	}
	public void setPrice(int price) {
		this.price = price;
	}
	public String getProdDetail() {
		return prodDetail;
	}
	public void setProdDetail(String prodDetail) {
		this.prodDetail = prodDetail;
	}
	public String getProdName() {
		return prodName;
	}
	public void setProdName(String prodName) {
		this.prodName = prodName;
	}
	public int getProdNo() {
		return prodNo;
	}
	public void setProdNo(int prodNo) {
		this.prodNo = prodNo;
	}
	public Date getRegDate() {
		return regDate;
	}
	public void setRegDate(Date regDate) {
		this.regDate = regDate;
	}
	public String getProTranCodeName() {
	    String code = (this.proTranCode != null) ? this.proTranCode.trim() : "0";
	    
	    switch(code) {
	        case "0": return "판매중";
	        case "1": return "구매완료";
	        case "2": return "배송중";
	        case "3": return "배송완료";
	        case "4": return "재고없음";
	        default: return "상태없음";
	    }
	}

	// Override
	public String toString() {
		return "Product : [fileName]" + fileName
				+ "[manuDate]" + manuDate+ "[price]" + price + "[prodDetail]" + prodDetail
				+ "[prodName]" + prodName + "[prodNo]" + prodNo;
	}	
}


2. Search.java

package com.model2.mvc.common;


//==>리스트화면을 모델링(추상화/캡슐화)한 Bean 
public class Search {
	
	///Field
	private int currentPage;
	private String searchCondition;
	private String searchKeyword;
	private int pageSize;
	//==> 리스트화면 currentPage에 해당하는 회원정보를 ROWNUM 사용 SELECT 위해 추가된 Field 
	//==> UserMapper.xml 의 
	//==> <select  id="getUserList"  parameterType="search"	resultMap="userSelectMap">
	//==> 참조
	private int endRowNum;
	private int startRowNum;
	
	///Constructor
	public Search() {
	}
	
	///Method
	public int getPageSize() {
		return pageSize;
	}
	public void setPageSize(int paseSize) {
		this.pageSize = paseSize;
	}
	
	public int getCurrentPage() {
		return currentPage;
	}
	public void setCurrentPage(int currentPage) {
		this.currentPage = currentPage;
	}

	public String getSearchCondition() {
		return searchCondition;
	}
	public void setSearchCondition(String searchCondition) {
		this.searchCondition = searchCondition;
	}
	
	public String getSearchKeyword() {
		return searchKeyword;
	}
	public void setSearchKeyword(String searchKeyword) {
		this.searchKeyword = searchKeyword;
	}
	
	//==> Select Query 시 ROWNUM 마지막 값 
	public int getEndRowNum() {
		return getCurrentPage()*getPageSize();
	}
	//==> Select Query 시 ROWNUM 시작 값
	public int getStartRowNum() {
		return (getCurrentPage()-1)*getPageSize()+1;
	}

	@Override
	public String toString() {
		return "Search [currentPage=" + currentPage + ", searchCondition="
				+ searchCondition + ", searchKeyword=" + searchKeyword
				+ ", pageSize=" + pageSize + ", endRowNum=" + endRowNum
				+ ", startRowNum=" + startRowNum + "]";
	}
}


3. ProductService 각각의 Method 를 호출 ProductRestController
: URL Prefix : /product/json/
: 상품등록 : /addProduct
: 상품조회 : /getProduct
: 상품리스트 : /getProductList
: 상품수정 : /updateProduct
: 상품 총 개수 (옵션) : /getTotalCount

4. 자세한 주석 처리 

5. @Qualifier("productServiceImpl"), @PostMapping, @GetMapping 명확하게 사용
6. 단순 boolean, Product, Map 반환
7. 메서드에서 "json/..." 붙임
